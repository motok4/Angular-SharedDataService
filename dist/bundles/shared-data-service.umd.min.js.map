{"version":3,"file":"shared-data-service.umd.min.js","sources":["~/shared-data-service/src/app/modules/shared-data-service/shared-data-service.service.ts","~/shared-data-service/src/app/modules/shared-data-service/shared-data-service.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nexport class SharedDataService {\n  \n  chanels: Map<any,any> = new Map();\n  observable: Map<any,any> = new Map();\nconstructor() { }\n/**\n * @param {?} label\n * @return {?}\n */\nverifyChannel(label: any) {\n    if( !this.chanels.has(label) ){\n      let /** @type {?} */ hashmap = new BehaviorSubject<string>('');\n      this.chanels.set( label, hashmap );\n      this.observable.set(label, this.chanels.get(label).asObservable() ); \n    }\n  }\n/**\n * @param {?} label\n * @param {?} mensagem\n * @return {?}\n */\npublish(label: any, mensagem: any){\n    this.verifyChannel(label);\n    this.chanels.get(label).next(mensagem);\n  }\n/**\n * @param {?} label\n * @param {?} callback\n * @return {?}\n */\nsubscribe(label: any, callback){\n    this.verifyChannel(label);\n    this.observable.get(label).subscribe(callback);\n\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SharedDataService_tsickle_Closure_declarations() {\n/** @type {?} */\nSharedDataService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSharedDataService.ctorParameters;\n/** @type {?} */\nSharedDataService.prototype.chanels;\n/** @type {?} */\nSharedDataService.prototype.observable;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedDataService } from './shared-data-service.service';\nexport class SharedDataServiceModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers:[SharedDataService],\n  exports:[]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SharedDataServiceModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSharedDataServiceModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSharedDataServiceModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["SharedDataService","this","chanels","Map","observable","prototype","verifyChannel","label","has","hashmap","BehaviorSubject","set","get","asObservable","publish","mensagem","next","subscribe","callback","decorators","type","Injectable","ctorParameters","SharedDataServiceModule","NgModule","args","imports","CommonModule","declarations","providers","exports"],"mappings":"uXAEA,IAAAA,EAAA,WAIA,SAAAA,IAFEC,KAAFC,QAE0B,IAAIC,IAD5BF,KAAFG,WAE6B,IAAID,WAIjCH,EAAAK,UAAAC,cAAA,SADGC,GAEC,IADIN,KAAMC,QAAQM,IAAID,GAAO,CAE3B,IADIE,EAAU,IAAIC,EAAAA,gBAAuB,IAEzCT,KADKC,QAAQS,IAAKJ,EAAOE,GAEzBR,KADKG,WAAWO,IAAIJ,EAAON,KAAKC,QAAQU,IAAIL,GAAOM,kBASzDb,EAAAK,UAAAS,QAAA,SANGP,EAAAQ,GAOCd,KANKK,cAAcC,GAOnBN,KANKC,QAAQU,IAAIL,GAAOS,KAAKD,IAajCf,EAAAK,UAAAY,UAAA,SAXGV,EAAAW,GAMDjB,KALOK,cAAcC,GAYnBN,KAXKG,WAAWQ,IAAIL,GAAOU,UAAUC,MArBzC,GAyBOlB,EAAPmB,aACEC,KAAMC,EAAAA,aAGPrB,EAADsB,eAAC,WAAA,UC5BD,IAAAC,EAAA,kBAAA,aAAA,GAE8CA,EAA9CJ,aACEC,KAAMI,EAAAA,SAAUC,OADhBC,SACEC,EAAAA,cAEFC,gBACAC,WAEW7B,GADX8B,eAMDP,EAADD,eAAC,WAAA"}
